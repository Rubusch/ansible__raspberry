---
- name: Raspberry Provisioning
  hosts: all
  become: 'yes'
  vars:
    user:
      - name: "pi"
        password: "xdr5XDR%"
    packages:
      - vim
      - emacs
      - wget
      - htop
      - tig
      - zlib1g-dev
      - g++
      - build-essential
      - sudo
      - libssl-dev
      - bison
      - flex
      - bc
      - libncurses5-dev
      - libelf-dev
      - python3-all
      - rsync
      - binutils
      - unzip
      - bzip2
      - make
      - gcc
      - cpio
      - libc6-dev
      - fakeroot
      - udev
      - hdparm
      - xmlto
      - perl
      - wget
      - curl
      - bin86
      - patch
      - doxygen
      - python-is-python2
      - mercurial
      - kmod
      - fonts-noto-cjk
      - autoconf
      - libtool
      - libtool-bin
      - aptitude
      - bsdmainutils
      - i2c-tools
      - device-tree-compiler
      - graphviz
      - u-boot-tools
      - codespell
      - clang-format
      - clang-tools
      - clang-tidy
      - astyle
      - exuberant-ctags
      - tree
      - mc
      - colordiff
      - dos2unix
      - chrpath
      - diffstat
      - gawk
      - texinfo
      - libsdl1.2-dev
      - xterm
      - screen
      - emacs-goodies-el
      - exuberant-ctags
      - git-all
      - python3
      - python3-virtualenv
      - python3-pip
      - python3-setuptools
      - virtualenv
      - vim-bitbake
  tasks:
    - name: Fix login
      ansible.builtin.command: raspi-config nonint do_boot_behaviour B2

#    - name: Fix /usr/local permissions
#      ansible.builtin.command: chown pi:pi -R /usr/local

    - name: Fix /usr/local permissions
      ansible.builtin.file:
        path: /usr/local
        state: directory
        recurse: yes
        owner: pi
        group: pi
        mode: 755

    - name: Expand rootfs
      ansible.builtin.command: raspi-config --expand-rootfs

    - name: Reboot
      ansible.builtin.reboot:

    - name: Wifi
      shell: |
        sudo rfkill unblock all
        sudo ifup --force wlan0
      register: os_info
      debugger: on_failed

    - name: locales
      block:
        - name: Install locales
          ansible.builtin.apt:
            update_cache: yes
            cache_valid_time: 3600
            name: locales

        - name: Install elpa-magit
          ansible.builtin.apt:
            name: elpa-magit

        - name: Fix locales
          shell: sudo locale-gen en_US.UTF-8
          register: os_info
          debugger: on_failed

    - name: Install package list
      ansible.builtin.apt:
        pkg: "{{ packages }}"
        state: latest

    - name: Reboot
      ansible.builtin.reboot:

    - name: Install emacs goodies
      ansible.builtin.apt:
        name: emacs-goodies-el

    - name: Reboot
      ansible.builtin.reboot:

    - name: Autoclean package list
      ansible.builtin.apt:
        autoclean: yes

    - name: Autoremove dependencies no longer required
      ansible.builtin.apt:
        autoremove: yes

#    - name: Install Labgrid -> separate role (add on)
#      shell: |
#        pip install --upgrade pip setuptools wheel
#        git clone https://github.com/labgrid-project/labgrid
#        cd labgrid && pip install -r requirements.txt
#        python3 setup.py install
#      register: os_info

    - name: Enable systemd services
      systemd:
        name: ssh.service
        enabled: true
        masked: no

    - name: Reboot
      ansible.builtin.reboot:

    - name: All done!
      debug:
        msg: Packages have been successfully installed
