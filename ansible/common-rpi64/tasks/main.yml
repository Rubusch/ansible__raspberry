---
# tasks file for rpi
- name: rpi - Fix login
  become: 'yes'
  ansible.builtin.command: raspi-config nonint do_boot_behaviour B2

- name: rpi - Fix /usr/local permissions
  become: 'yes'
  ansible.builtin.file:
    path: /usr/local
    state: directory
    recurse: yes
    owner: pi
    group: pi

- name: rpi - Expand rootfs
  become: 'yes'
  ansible.builtin.command: raspi-config --expand-rootfs

- name: rpi - Copy pi configs
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: pi
    group: pi
    mode: 0644
  with_items:
    - { src: home/pi/bashrc, dest: /home/pi/.bashrc }
    - { src: home/pi/vimrc, dest: /home/pi/.vimrc }
    - { src: home/pi/emacsrc, dest: /home/pi/.emacs }
    - { src: home/pi/emacsstarter.sh, dest: /home/pi/.emacsstarter.sh }
    - { src: home/pi/config/, dest: /home/pi/.config }

  ## actually, for python prefer virtualenv to force linking .local (dirty hack)
- name: rpi - Symlink .local to /usr/local
  file:
    src: /usr/local
    dest: "{{ ansible_env.HOME }}/.local"
    owner: pi
    group: pi
    state: link

- name: rpi - Copy etc configs
  become: 'yes'
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: 0755
  with_items:
    - { src: etc/apt, dest: /etc/apt }
    - { src: etc/motion, dest: /etc/motion }
    - { src: etc/screenrc, dest: /etc/screenrc }
    - { src: etc/sudoers, dest: /etc/sudoers }
    - { src: usr/share/polkit-1, dest: /usr/share/polkit-1 }

- name: rpi - Reboot
  become: 'yes'
  ansible.builtin.reboot:

- name: rpi - Wifi
  become: 'yes'
  shell: |
    sudo rfkill unblock all
    sudo ifup --force wlan0
  register: os_info
  debugger: on_failed

- name: rpi - DHCP client for wlan0
  become: 'yes'
  shell: |
    sudo killall dhclient
    sudo dhclient wlan0

- name: rpi - fix locales
  become: 'yes'
  block:
    - name: rpi/locales - Install locales
      ansible.builtin.apt:
        update_cache: yes
        cache_valid_time: 3600
        name: locales

    - name: rpi/locales - Ensure localisation files for '{{ config_system_locale }}' are available
      locale_gen:
        name: "{{ config_system_locale }}"
        state: present

    - name: rpi/locales - Ensure localisation files for '{{ config_system_language }}' are available
      locale_gen:
        name: "{{ config_system_language }}"
        state: present

    - name: rpi/locales - Get current locale and language configuration
      command: localectl status
      register: locale_status
      changed_when: false

    - name: rpi/locales - Parse 'LANG' from current locale and language configuration
      set_fact:
        locale_lang: "{{ locale_status.stdout | regex_search('LANG=([^\n]+)', '\\1') | first }}"

    - name: rpi/locales - Parse 'LANGUAGE' from current locale and language configuration
      set_fact:
        locale_language: "{{ locale_status.stdout | regex_search('LANGUAGE=([^\n]+)', '\\1') | default([locale_lang], true) | first }}"

    - name: rpi/locales - Configure locale to '{{ config_system_locale }}' and language to '{{ config_system_language }}'
      command: localectl set-locale LANG={{ config_system_locale }} LANGUAGE={{ config_system_language }}
      changed_when: locale_lang != config_system_locale or locale_language != config_system_language

    - name: rpi/locales - Reboot
      ansible.builtin.reboot:

- name: rpi - DHCP client for wlan0
  become: 'yes'
  shell: |
    sudo killall dhclient
    sudo dhclient wlan0

## hack: elpa-magit does not install well with others
#- name: Install elpa-magit
#  become: 'yes'
#  ansible.builtin.apt:
#    name: elpa-magit

- name: rpi - Install package list
  become: 'yes'
  ansible.builtin.apt:
    pkg: "{{ packages }}"
    state: latest

- name: rpi - Reboot
  become: 'yes'
  ansible.builtin.reboot:

- name: rpi - DHCP client for wlan0
  become: 'yes'
  shell: |
    sudo killall dhclient
    sudo dhclient wlan0

## hack: elpa-magit does not install well with other packages...
- name: rpi - Install emacs goodies
  become: 'yes'
  ansible.builtin.apt:
    name: emacs-goodies-el

- name: rpi - Reboot
  become: 'yes'
  ansible.builtin.reboot:

- name: rpi - DHCP client for wlan0
  become: 'yes'
  shell: |
    sudo killall dhclient
    sudo dhclient wlan0

- name: rpi - Enable ssh
  become: 'yes'
  systemd:
    name: ssh.service
    enabled: true
    masked: no

- name: rpi - Disable systemd ModemManager
  become: 'yes'
  ansible.builtin.systemd:
    name: ModemManager.service
    enabled: false

- name: rpi - Enable systemd lighttpd
  become: 'yes'
  ansible.builtin.systemd:
    name: lighttpd.service
    enabled: true

- name: rpi - Remove apache2
  become: 'yes'
  ansible.builtin.apt:
    name: apache2
    purge: yes

## ycm would re-install apache2 and plethora of additional packages
#- name: Vim install YCM
#  shell: |
#    vim-addon-manager install youcompleteme

- name: rpi - fix timezone to Europe/Zurich
  become: 'yes'
  shell: |
    sudo mv /etc/localtime /etc/localtime-wtf
    ln -s /usr/share/zoneinfo/Europe/Zurich /etc/localtime

- name: rpi - Autoclean package list
  become: 'yes'
  ansible.builtin.apt:
    autoclean: yes

- name: rpi - Autoremove dependencies no longer required
  become: 'yes'
  ansible.builtin.apt:
    autoremove: yes

- name: rpi - Reboot
  become: 'yes'
  ansible.builtin.reboot:

- name: rpi - DHCP client for wlan0
  become: 'yes'
  shell: |
    sudo killall dhclient
    sudo dhclient wlan0

- name: rpi - All done!
  debug:
    msg: Packages have been successfully installed
